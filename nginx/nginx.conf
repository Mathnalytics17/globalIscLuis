# Redirigir HTTP a HTTPS
server {
    listen 80;
    server_name www.altasfundacionaladina.org api.altasfundacionaladina.org http://127.0.0.1:8000/ http://localhost:8000/;

    # Redirigir todo el tráfico HTTP a HTTPS
    return 301 https://$host$request_uri;
}

# Frontend (Next.js) - www.altasfundacionaladina.org
server {
    listen 443 ssl;
    server_name www.altasfundacionaladina.org;

    # Certificados SSL
    ssl_certificate /etc/letsencrypt/live/www.altasfundacionaladina.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/www.altasfundacionaladina.org/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Redirigir todo el tráfico al frontend (Next.js)
    location / {
        proxy_pass http://82.112.250.23:3000;  # Ajusta según la IP y puerto del frontend
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}

# Backend (Django) - api.altasfundacionaladina.org
server {
    listen 443 ssl;
    server_name api.altasfundacionaladina.org;

    # Certificados SSL
    ssl_certificate /etc/letsencrypt/live/api.altasfundacionaladina.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.altasfundacionaladina.org/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Redirigir todo el tráfico al backend (Django)
    location / {
        proxy_pass http://web:8000;  # Ajusta según el nombre del servicio en Docker
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}